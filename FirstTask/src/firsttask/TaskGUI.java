/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firsttask;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Zainab
 */
public class TaskGUI extends javax.swing.JFrame {

    /**
     * Creates new form TaskGUI
     */
    public TaskGUI() {
       
        initComponents();
    }
     File file = null; 
      public static GraphBuilder graph;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        readBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        AproxBtn = new javax.swing.JButton();
        relaxBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtext = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        readBtn.setText("Read Input");
        readBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Reset");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        AproxBtn.setText("Run Approximation Algo");
        AproxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AproxBtnActionPerformed(evt);
            }
        });

        relaxBtn.setText("Run Relaxation Algo");
        relaxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relaxBtnActionPerformed(evt);
            }
        });

        Jtext.setColumns(20);
        Jtext.setRows(5);
        jScrollPane1.setViewportView(Jtext);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(relaxBtn)
                            .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AproxBtn)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(readBtn)
                                .addGap(15, 15, 15)))
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(readBtn)
                            .addComponent(clearBtn))
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AproxBtn)
                            .addComponent(relaxBtn))
                        .addGap(18, 18, 18))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AproxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AproxBtnActionPerformed
        // TODO add your handling code here:
        long start=System.currentTimeMillis();
        runApproximatioAlgo();
        long end =System.currentTimeMillis();
          long t= (end-start);
          JOptionPane.showMessageDialog(null," finished Approximation with time inms : "+t);
       
    }//GEN-LAST:event_AproxBtnActionPerformed

    private void readBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readBtnActionPerformed
        
        Jtext.setText("start reading dataset");
        String path = System.getProperty("user.dir");
        JFileChooser jChooser1 = new JFileChooser(path);   //user working directory
        if (jChooser1.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            file = jChooser1.getSelectedFile();

            try {
                getInputDataset p = new getInputDataset();
                graph= p.getGraph(file);
                
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            Jtext.setText("");
            Jtext.append("finished reading dataset..\n");
        }
    }//GEN-LAST:event_readBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        Jtext.setText("");
          graph= null;
       
        file = null;
    }//GEN-LAST:event_clearBtnActionPerformed

    private void relaxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relaxBtnActionPerformed
        // TODO add your handling code here:
        long start=System.currentTimeMillis();
        runRelaxationAlgo();
          long end =System.currentTimeMillis();
          long t= (end-start);
          JOptionPane.showMessageDialog(null," Finished relaxation  with in ms : "+t);
        
    }//GEN-LAST:event_relaxBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AproxBtn;
    private javax.swing.JTextArea Jtext;
    private javax.swing.JButton clearBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton readBtn;
    private javax.swing.JButton relaxBtn;
    // End of variables declaration//GEN-END:variables


 public void runRelaxationAlgo(){
     if (graph == null) {
            JOptionPane.showMessageDialog(null, "Please input your dataset!");
        } else {
     VertexcoverRelaxation vr= new VertexcoverRelaxation();
       ArrayList result = vr.solve(graph);
            String text = " Result is: { ";
            for (int i = 0; i < result.size(); i++) {
                text += result.get(i) + "\n";
            }
            text += "}\n";
            Jtext.append(text);

            Jtext.append("Relaxation finished!\n");
     }
    
    }
 
 
 public void runApproximatioAlgo(){
      if (graph == null) {
            JOptionPane.showMessageDialog(null, "Please input your dataset!");
        } else {
 Jtext.append("running Approximation!\n");
            VertexcoverApproximation ver = new VertexcoverApproximation();
            String text = "Result {\n " + ver.compute(graph)+"}\n";
            Jtext.append(text);
            Jtext.append("Approximation finished\n");}
 }
 




}
